name: Release with release-it

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
          - prepatch
          - preminor
          - premajor

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint files
        run: yarn lint

      - name: Typecheck files
        run: yarn typecheck

      - name: Run unit tests
        run: yarn test --maxWorkers=2 --coverage

  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup
        uses: ./.github/actions/setup

      - name: Setup npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Release with release-it
        run: yarn release --increment=${{ github.event.inputs.release_type }} --ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post-release info
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "🎉 Successfully released version $NEW_VERSION"
          echo "📦 npm: https://www.npmjs.com/package/$(node -p "require('./package.json').name")"
          echo "🏷️ GitHub: https://github.com/${{ github.repository }}/releases/tag/v$NEW_VERSION"
